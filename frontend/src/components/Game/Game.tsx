import { useHandleConnection, Users } from './hooks';

const getEnemy = (users: Users, id: number) =>
	Object.values(users).filter((user) => user.id !== id)[0];

export const Game = ({ socket, id }: { socket: WebSocket; id: number }) => {
	const { users, error, disable, onClick } = useHandleConnection(socket, id);

	if (error) {
		return <h1>{error}</h1>;
	}

	if (!users) {
		return <h1>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</h1>;
	}

	return (
		<>
			<h1>Rock - Paper - Scissors</h1>

			<div className="choices">
				<button onClick={() => onClick('–∫–∞–º–µ–Ω—å')} disabled={disable}>
					üëä
				</button>
				<button onClick={() => onClick('–±—É–º–∞–≥–∞')} disabled={disable}>
					‚úã
				</button>
				<button onClick={() => onClick('–Ω–æ–∂–Ω–∏—Ü—ã')} disabled={disable}>
					‚úå
				</button>
			</div>

			<div id="playerDisplay">–í–∞—à –Ω–∏–∫: {users?.[id].username} </div>
			<div id="enemyDisplay">–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: {getEnemy(users, id)?.username || ''} </div>
			<div id="resultDisplay">
				{getEnemy(users, id) ? '' : '–û–∂–∏–¥–∞–π—Ç–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞'}
				{users?.[id]?.text || ''}
			</div>

			<div className="scoreDisplay">
				–í–∞—à —Å—á—ë—Ç:
				<span id="playerScoreDisplay">{users?.[id]?.score || 0}</span>
			</div>

			<div className="scoreDisplay">
				–°—á—ë—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:
				<span id="enemyScoreDisplay">{getEnemy(users, id)?.score || 0}</span>
			</div>
		</>
	);
};
